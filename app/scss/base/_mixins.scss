/* Mixins */
@mixin box-shadow($inset:true) {
  @if $inset {
    -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
    box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
    -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
    -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
    transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
  } @else {
    -webkit-box-shadow:none;
    -moz-box-shadow:none;
    box-shadow:none;
    transition:none;
  }
}

@mixin bg-tint ($opacity) {
    @if $opacity == 'full' {
        $opacity: 1.0;
    } @else if $opacity == 'twothir'{
        $opacity: 0.75;
    } @else if $opacity == 'semi'{
        $opacity: 0.5;
    } @else if $opacity == 'zero'{
        $opacity: 0.0;
    }

    /* Fallback for web browsers that don't support RGBa */
    background-color: rgb(0, 0, 0);
    /* RGBa with 0.6 opacity */
    background-color: rgba(0, 0, 0, $opacity);
}

@mixin animate($speed:0.3s) {
    -webkit-transition: all $speed ease-in-out;
	-moz-transition: all $speed ease-in-out;
	-o-transition: all $speed ease-in-out;
	-ms-transition: all $speed ease-in-out;
	transition: all $speed ease-in-out;
}

@mixin border-radius($radius){
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}

@mixin set-opacity($opacity){    
    @if $opacity == 'full' {
        filter: alpha(opacity=100);
        opacity: 1.0;
    } @else if $opacity == 'twothir'{
        filter: alpha(opacity=75);
        opacity: 0.75;
    } @else if $opacity == 'semi'{
        filter: alpha(opacity=50);
        opacity: 0.5;
    } @else if $opacity == 'zero'{
        filter: alpha(opacity=0);
        opacity: 0.0;
    }
}

@mixin add-border($size, $color, $position){
    @if $position == 'all'{
        border:$size solid $color;
    } @else if $position == 'top'{
        border-top:$size solid $color;
    } @else if $position == 'bottom'{
        border-bottom:$size solid $color;
    } @else if $position == 'right'{
        border-right:$size solid $color;
    } @else if $position == 'left'{
        border-left:$size solid $color;
    } @else if $position == 'top-bottom'{
        border-top:$size solid $color;
        border-bottom:$size solid $color;
    } @else if $position == 'right-left'{
        border-right:$size solid $color;
        border-left:$size solid $color;
    }
}

@mixin add-margin($size, $position){
    @if $position == 'all'{
        margin:$size;
    } @else if $position == 'top'{
        margin-top:$size;
    } @else if $position == 'bottom'{
        margin-bottom:$size;
    } @else if $position == 'right'{
        margin-right:$size;
    } @else if $position == 'left'{
        margin-left:$size;
    }
}

@mixin add-background($color){
    background:$color;
    
    @if $color == $light-color {
        color: #666;
    } @else {
        color: #fff;
    }
        
}

@mixin no-padding($side) {
    /*
    @include no-padding("left");
    */
    
    @if $side == 'all' {
        .no-padding {
            padding: 0 !important;
        }
    } @else {
        .no-padding-#{$side} {
            padding-#{$side}: 0 !important;
        }
    }
}

@mixin hide-text(){
    text-indent: 100%;white-space: nowrap;overflow: hidden;
}

@mixin trim-string(){
    overflow:hidden;text-overflow:ellipsis;white-space:nowrap;
}

@mixin trim-string-remove(){
    overflow:visible;text-overflow:ellipsis;white-space:normal;
}